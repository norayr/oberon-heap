MODULE OutExt;	(* Based on Stream-oriented text output module Out.Mod, 	Copyright MR 1992, NW 12.1.93, JG 26.7.93 *) 	(* Extended by FA 10.11.94 *)	(* Extended by Serge Demeyer 30.01.2001 -- Added Writer() + Clear() *)	IMPORT		Out, Texts, Oberon, Fonts;		VAR		W: Texts.Writer;		T: Texts.Text;		PROCEDURE Open*;		BEGIN		IF T = Oberon.Log THEN NEW(T); Texts.Open(T, "") END;		Oberon.OpenText("Out.Text", T, 400, 200);		Texts.SetFont(W, Fonts.This("Courier10.Scn.Fnt"));	END Open;		PROCEDURE Clear*;	BEGIN		Texts.Delete(T, 0, T.len);	END Clear;	PROCEDURE Writer* (VAR w: Texts.Writer);		BEGIN		Texts.Append(T, w.buf)	END Writer;	PROCEDURE Char* (ch: CHAR);		BEGIN		Texts.Write(W, ch);		Texts.Append(T, W.buf)	END Char;		PROCEDURE String* (str: ARRAY OF CHAR);		BEGIN		Texts.WriteString(W, str);		Texts.Append(T, W.buf)	END String;		PROCEDURE Int* (i, n: LONGINT);		BEGIN		Texts.WriteInt(W, i, n);		Texts.Append(T, W.buf)	END Int;			PROCEDURE IntHex* (i: LONGINT);		BEGIN		Texts.WriteHex(W, i);		Texts.Append(T, W.buf)	END IntHex;			PROCEDURE Color*( i : INTEGER );	BEGIN		Texts.SetColor(W,SHORT(i));	END Color;		PROCEDURE RealFl* (x: REAL; n: LONGINT);		BEGIN		Texts.WriteReal(W, x, n);		Texts.Append(T, W.buf)	END RealFl;		PROCEDURE RealFix* (x: REAL; n, d: LONGINT);		BEGIN		Texts.WriteRealFix(W, x, n, d, 0);		Texts.Append(T, W.buf)	END RealFix;		PROCEDURE RealHex* (x: REAL);		BEGIN		Texts.WriteRealHex(W, x);		Texts.Append(T, W.buf)	END RealHex;		PROCEDURE LongRealFl* (x: LONGREAL; n: LONGINT);		BEGIN		Texts.WriteLongReal(W, x, n);		Texts.Append(T, W.buf)	END LongRealFl;		PROCEDURE LongRealFix* (x: LONGREAL; n, d: LONGINT);		BEGIN		Texts.WriteLongRealFix(W, x, n, d, 0);		Texts.Append(T, W.buf)	END LongRealFix;		PROCEDURE LongRealHex* (x: LONGREAL);		BEGIN		Texts.WriteLongRealHex(W, x);		Texts.Append(T, W.buf)	END LongRealHex;			PROCEDURE Date* ;			VAR			t, d: LONGINT;		BEGIN		Oberon.GetClock(t, d);		Texts.WriteDate(W, t, d);		Texts.Append(T, W.buf)	END Date;		PROCEDURE Ln*;		BEGIN		Texts.WriteLn(W);		Texts.Append(T, W.buf)	END Ln;	BEGIN	Texts.OpenWriter(W);	T := Oberon.LogEND OutExt.